<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qrx.blog.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.qrx.blog.domain.Blog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
    <result column="blog_img" jdbcType="VARCHAR" property="blogImg" />
    <result column="blog_tag" jdbcType="VARCHAR" property="blogTag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="category_Id" jdbcType="INTEGER" property="categoryId" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qrx.blog.domain.Blog">
    <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, blog_title, blog_img, blog_tag, create_time, update_time, category_Id, category_name
  </sql>
  <sql id="Blob_Column_List">
    blog_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qrx.blog.domain.BlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qrx.blog.domain.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qrx.blog.domain.Blog" useGeneratedKeys="true" keyProperty="id">
    insert into blog (id, blog_title, blog_img,
      blog_tag, create_time, update_time,
      category_Id, category_name, blog_content
      )
    values (#{id,jdbcType=INTEGER}, #{blogTitle,jdbcType=VARCHAR}, #{blogImg,jdbcType=VARCHAR}, 
      #{blogTag,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{categoryId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, #{blogContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qrx.blog.domain.Blog" useGeneratedKeys="true" keyProperty="id">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blogTitle != null">
        blog_title,
      </if>
      <if test="blogImg != null">
        blog_img,
      </if>
      <if test="blogTag != null">
        blog_tag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="categoryId != null">
        category_Id,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="blogContent != null">
        blog_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogTitle != null">
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogImg != null">
        #{blogImg,jdbcType=VARCHAR},
      </if>
      <if test="blogTag != null">
        #{blogTag,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="blogContent != null">
        #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qrx.blog.domain.Blog">
    update blog
    <set>
      <if test="blogTitle != null">
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogImg != null">
        blog_img = #{blogImg,jdbcType=VARCHAR},
      </if>
      <if test="blogTag != null">
        blog_tag = #{blogTag,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        category_Id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="blogContent != null">
        blog_content = #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qrx.blog.domain.Blog">
    update blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_img = #{blogImg,jdbcType=VARCHAR},
      blog_tag = #{blogTag,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      category_Id = #{categoryId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      blog_content = #{blogContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qrx.blog.domain.Blog">
    update blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_img = #{blogImg,jdbcType=VARCHAR},
      blog_tag = #{blogTag,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      category_Id = #{categoryId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteBatch" >
    delete  from blog
    where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>